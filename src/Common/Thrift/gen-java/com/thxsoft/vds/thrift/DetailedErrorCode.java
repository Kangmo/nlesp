/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.thxsoft.vds.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum DetailedErrorCode implements org.apache.thrift.TEnum {
  VKErrorDetailUserNotFound(1001),
  VKErrorDetailInvalidUserIdentifierFormat(1002),
  VKErrorDetailFriendIsRequester(1003),
  VKErrorDetailEmailNotFound(1004),
  VKErrorDetailInvalidPassword(1005),
  VKErrorDetailEmptyEmailOnUserProfile(1006),
  VKErrorDetailEmptyPasswordOnUserProfile(1007),
  VKErrorDetailEmptyUserIdentifierOnUserProfile(1008),
  VKErrorDetailEmailAlreadyExists(1009),
  VKErrorDetailUnableToUpdateOtherUserProfile(1010),
  VKErrorDetailUnableToChangeEmail(1011),
  VKErrorDetailInvalidContextIdentifier(1012),
  VKErrorDetailContextNotFound(1013),
  VKErrorDetailExceedMaxUsers(1014),
  VKErrorDetailTooLowClientVersion(1015);

  private final int value;

  private DetailedErrorCode(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static DetailedErrorCode findByValue(int value) { 
    switch (value) {
      case 1001:
        return VKErrorDetailUserNotFound;
      case 1002:
        return VKErrorDetailInvalidUserIdentifierFormat;
      case 1003:
        return VKErrorDetailFriendIsRequester;
      case 1004:
        return VKErrorDetailEmailNotFound;
      case 1005:
        return VKErrorDetailInvalidPassword;
      case 1006:
        return VKErrorDetailEmptyEmailOnUserProfile;
      case 1007:
        return VKErrorDetailEmptyPasswordOnUserProfile;
      case 1008:
        return VKErrorDetailEmptyUserIdentifierOnUserProfile;
      case 1009:
        return VKErrorDetailEmailAlreadyExists;
      case 1010:
        return VKErrorDetailUnableToUpdateOtherUserProfile;
      case 1011:
        return VKErrorDetailUnableToChangeEmail;
      case 1012:
        return VKErrorDetailInvalidContextIdentifier;
      case 1013:
        return VKErrorDetailContextNotFound;
      case 1014:
        return VKErrorDetailExceedMaxUsers;
      case 1015:
        return VKErrorDetailTooLowClientVersion;
      default:
        return null;
    }
  }
}
