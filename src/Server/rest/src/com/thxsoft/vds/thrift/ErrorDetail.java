/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.thxsoft.vds.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ErrorDetail implements org.apache.thrift.TBase<ErrorDetail, ErrorDetail._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ErrorDetail");

  private static final org.apache.thrift.protocol.TField DETAILED_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("detailedCode", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField DETAILED_MESSAGE_FORMAT_FIELD_DESC = new org.apache.thrift.protocol.TField("detailedMessageFormat", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DETAILED_MESSAGE_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("detailedMessageArgs", org.apache.thrift.protocol.TType.LIST, (short)3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ErrorDetailStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ErrorDetailTupleSchemeFactory());
  }

  /**
   * 
   * @see DetailedErrorCode
   */
  public DetailedErrorCode detailedCode; // required
  public String detailedMessageFormat; // required
  public List<String> detailedMessageArgs; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see DetailedErrorCode
     */
    DETAILED_CODE((short)1, "detailedCode"),
    DETAILED_MESSAGE_FORMAT((short)2, "detailedMessageFormat"),
    DETAILED_MESSAGE_ARGS((short)3, "detailedMessageArgs");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DETAILED_CODE
          return DETAILED_CODE;
        case 2: // DETAILED_MESSAGE_FORMAT
          return DETAILED_MESSAGE_FORMAT;
        case 3: // DETAILED_MESSAGE_ARGS
          return DETAILED_MESSAGE_ARGS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DETAILED_CODE, new org.apache.thrift.meta_data.FieldMetaData("detailedCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, DetailedErrorCode.class)));
    tmpMap.put(_Fields.DETAILED_MESSAGE_FORMAT, new org.apache.thrift.meta_data.FieldMetaData("detailedMessageFormat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DETAILED_MESSAGE_ARGS, new org.apache.thrift.meta_data.FieldMetaData("detailedMessageArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ErrorDetail.class, metaDataMap);
  }

  public ErrorDetail() {
  }

  public ErrorDetail(
    DetailedErrorCode detailedCode,
    String detailedMessageFormat,
    List<String> detailedMessageArgs)
  {
    this();
    this.detailedCode = detailedCode;
    this.detailedMessageFormat = detailedMessageFormat;
    this.detailedMessageArgs = detailedMessageArgs;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ErrorDetail(ErrorDetail other) {
    if (other.isSetDetailedCode()) {
      this.detailedCode = other.detailedCode;
    }
    if (other.isSetDetailedMessageFormat()) {
      this.detailedMessageFormat = other.detailedMessageFormat;
    }
    if (other.isSetDetailedMessageArgs()) {
      List<String> __this__detailedMessageArgs = new ArrayList<String>();
      for (String other_element : other.detailedMessageArgs) {
        __this__detailedMessageArgs.add(other_element);
      }
      this.detailedMessageArgs = __this__detailedMessageArgs;
    }
  }

  public ErrorDetail deepCopy() {
    return new ErrorDetail(this);
  }

  @Override
  public void clear() {
    this.detailedCode = null;
    this.detailedMessageFormat = null;
    this.detailedMessageArgs = null;
  }

  /**
   * 
   * @see DetailedErrorCode
   */
  public DetailedErrorCode getDetailedCode() {
    return this.detailedCode;
  }

  /**
   * 
   * @see DetailedErrorCode
   */
  public ErrorDetail setDetailedCode(DetailedErrorCode detailedCode) {
    this.detailedCode = detailedCode;
    return this;
  }

  public void unsetDetailedCode() {
    this.detailedCode = null;
  }

  /** Returns true if field detailedCode is set (has been assigned a value) and false otherwise */
  public boolean isSetDetailedCode() {
    return this.detailedCode != null;
  }

  public void setDetailedCodeIsSet(boolean value) {
    if (!value) {
      this.detailedCode = null;
    }
  }

  public String getDetailedMessageFormat() {
    return this.detailedMessageFormat;
  }

  public ErrorDetail setDetailedMessageFormat(String detailedMessageFormat) {
    this.detailedMessageFormat = detailedMessageFormat;
    return this;
  }

  public void unsetDetailedMessageFormat() {
    this.detailedMessageFormat = null;
  }

  /** Returns true if field detailedMessageFormat is set (has been assigned a value) and false otherwise */
  public boolean isSetDetailedMessageFormat() {
    return this.detailedMessageFormat != null;
  }

  public void setDetailedMessageFormatIsSet(boolean value) {
    if (!value) {
      this.detailedMessageFormat = null;
    }
  }

  public int getDetailedMessageArgsSize() {
    return (this.detailedMessageArgs == null) ? 0 : this.detailedMessageArgs.size();
  }

  public java.util.Iterator<String> getDetailedMessageArgsIterator() {
    return (this.detailedMessageArgs == null) ? null : this.detailedMessageArgs.iterator();
  }

  public void addToDetailedMessageArgs(String elem) {
    if (this.detailedMessageArgs == null) {
      this.detailedMessageArgs = new ArrayList<String>();
    }
    this.detailedMessageArgs.add(elem);
  }

  public List<String> getDetailedMessageArgs() {
    return this.detailedMessageArgs;
  }

  public ErrorDetail setDetailedMessageArgs(List<String> detailedMessageArgs) {
    this.detailedMessageArgs = detailedMessageArgs;
    return this;
  }

  public void unsetDetailedMessageArgs() {
    this.detailedMessageArgs = null;
  }

  /** Returns true if field detailedMessageArgs is set (has been assigned a value) and false otherwise */
  public boolean isSetDetailedMessageArgs() {
    return this.detailedMessageArgs != null;
  }

  public void setDetailedMessageArgsIsSet(boolean value) {
    if (!value) {
      this.detailedMessageArgs = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case DETAILED_CODE:
      if (value == null) {
        unsetDetailedCode();
      } else {
        setDetailedCode((DetailedErrorCode)value);
      }
      break;

    case DETAILED_MESSAGE_FORMAT:
      if (value == null) {
        unsetDetailedMessageFormat();
      } else {
        setDetailedMessageFormat((String)value);
      }
      break;

    case DETAILED_MESSAGE_ARGS:
      if (value == null) {
        unsetDetailedMessageArgs();
      } else {
        setDetailedMessageArgs((List<String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case DETAILED_CODE:
      return getDetailedCode();

    case DETAILED_MESSAGE_FORMAT:
      return getDetailedMessageFormat();

    case DETAILED_MESSAGE_ARGS:
      return getDetailedMessageArgs();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case DETAILED_CODE:
      return isSetDetailedCode();
    case DETAILED_MESSAGE_FORMAT:
      return isSetDetailedMessageFormat();
    case DETAILED_MESSAGE_ARGS:
      return isSetDetailedMessageArgs();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ErrorDetail)
      return this.equals((ErrorDetail)that);
    return false;
  }

  public boolean equals(ErrorDetail that) {
    if (that == null)
      return false;

    boolean this_present_detailedCode = true && this.isSetDetailedCode();
    boolean that_present_detailedCode = true && that.isSetDetailedCode();
    if (this_present_detailedCode || that_present_detailedCode) {
      if (!(this_present_detailedCode && that_present_detailedCode))
        return false;
      if (!this.detailedCode.equals(that.detailedCode))
        return false;
    }

    boolean this_present_detailedMessageFormat = true && this.isSetDetailedMessageFormat();
    boolean that_present_detailedMessageFormat = true && that.isSetDetailedMessageFormat();
    if (this_present_detailedMessageFormat || that_present_detailedMessageFormat) {
      if (!(this_present_detailedMessageFormat && that_present_detailedMessageFormat))
        return false;
      if (!this.detailedMessageFormat.equals(that.detailedMessageFormat))
        return false;
    }

    boolean this_present_detailedMessageArgs = true && this.isSetDetailedMessageArgs();
    boolean that_present_detailedMessageArgs = true && that.isSetDetailedMessageArgs();
    if (this_present_detailedMessageArgs || that_present_detailedMessageArgs) {
      if (!(this_present_detailedMessageArgs && that_present_detailedMessageArgs))
        return false;
      if (!this.detailedMessageArgs.equals(that.detailedMessageArgs))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(ErrorDetail other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    ErrorDetail typedOther = (ErrorDetail)other;

    lastComparison = Boolean.valueOf(isSetDetailedCode()).compareTo(typedOther.isSetDetailedCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDetailedCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.detailedCode, typedOther.detailedCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDetailedMessageFormat()).compareTo(typedOther.isSetDetailedMessageFormat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDetailedMessageFormat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.detailedMessageFormat, typedOther.detailedMessageFormat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDetailedMessageArgs()).compareTo(typedOther.isSetDetailedMessageArgs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDetailedMessageArgs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.detailedMessageArgs, typedOther.detailedMessageArgs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ErrorDetail(");
    boolean first = true;

    sb.append("detailedCode:");
    if (this.detailedCode == null) {
      sb.append("null");
    } else {
      sb.append(this.detailedCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("detailedMessageFormat:");
    if (this.detailedMessageFormat == null) {
      sb.append("null");
    } else {
      sb.append(this.detailedMessageFormat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("detailedMessageArgs:");
    if (this.detailedMessageArgs == null) {
      sb.append("null");
    } else {
      sb.append(this.detailedMessageArgs);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ErrorDetailStandardSchemeFactory implements SchemeFactory {
    public ErrorDetailStandardScheme getScheme() {
      return new ErrorDetailStandardScheme();
    }
  }

  private static class ErrorDetailStandardScheme extends StandardScheme<ErrorDetail> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ErrorDetail struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DETAILED_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.detailedCode = DetailedErrorCode.findByValue(iprot.readI32());
              struct.setDetailedCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DETAILED_MESSAGE_FORMAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.detailedMessageFormat = iprot.readString();
              struct.setDetailedMessageFormatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DETAILED_MESSAGE_ARGS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.detailedMessageArgs = new ArrayList<String>(_list0.size);
                for (int _i1 = 0; _i1 < _list0.size; ++_i1)
                {
                  String _elem2; // required
                  _elem2 = iprot.readString();
                  struct.detailedMessageArgs.add(_elem2);
                }
                iprot.readListEnd();
              }
              struct.setDetailedMessageArgsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ErrorDetail struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.detailedCode != null) {
        oprot.writeFieldBegin(DETAILED_CODE_FIELD_DESC);
        oprot.writeI32(struct.detailedCode.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.detailedMessageFormat != null) {
        oprot.writeFieldBegin(DETAILED_MESSAGE_FORMAT_FIELD_DESC);
        oprot.writeString(struct.detailedMessageFormat);
        oprot.writeFieldEnd();
      }
      if (struct.detailedMessageArgs != null) {
        oprot.writeFieldBegin(DETAILED_MESSAGE_ARGS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.detailedMessageArgs.size()));
          for (String _iter3 : struct.detailedMessageArgs)
          {
            oprot.writeString(_iter3);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ErrorDetailTupleSchemeFactory implements SchemeFactory {
    public ErrorDetailTupleScheme getScheme() {
      return new ErrorDetailTupleScheme();
    }
  }

  private static class ErrorDetailTupleScheme extends TupleScheme<ErrorDetail> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ErrorDetail struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetDetailedCode()) {
        optionals.set(0);
      }
      if (struct.isSetDetailedMessageFormat()) {
        optionals.set(1);
      }
      if (struct.isSetDetailedMessageArgs()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetDetailedCode()) {
        oprot.writeI32(struct.detailedCode.getValue());
      }
      if (struct.isSetDetailedMessageFormat()) {
        oprot.writeString(struct.detailedMessageFormat);
      }
      if (struct.isSetDetailedMessageArgs()) {
        {
          oprot.writeI32(struct.detailedMessageArgs.size());
          for (String _iter4 : struct.detailedMessageArgs)
          {
            oprot.writeString(_iter4);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ErrorDetail struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.detailedCode = DetailedErrorCode.findByValue(iprot.readI32());
        struct.setDetailedCodeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.detailedMessageFormat = iprot.readString();
        struct.setDetailedMessageFormatIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.detailedMessageArgs = new ArrayList<String>(_list5.size);
          for (int _i6 = 0; _i6 < _list5.size; ++_i6)
          {
            String _elem7; // required
            _elem7 = iprot.readString();
            struct.detailedMessageArgs.add(_elem7);
          }
        }
        struct.setDetailedMessageArgsIsSet(true);
      }
    }
  }

}

